{"version":3,"sources":["components/ContactForm/ContactForm .jsx","components/Filter/Filter.jsx","components/ContactList/ContactList.jsx","App.js","index.js"],"names":["ContactForm","handleNameChange","handlePhoneChange","handleAddContact","className","onChange","type","name","pattern","title","required","onClick","Filter","filterContacts","ContactList","this","props","contacts","state","deleteContact","filter","length","map","item","number","id","key","toLowerCase","includes","Component","App","evt","setState","target","value","find","contact","alert","contactsArr","newContact","shortid","generate","localStorage","getItem","setItem","JSON","stringify","temperaryArr","parse","push","elementForRemove","index","indexOf","splice","removeItem","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.75b12d55.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport styles from \"./ContactForm.css\";\n\nfunction ContactForm({\n  handleNameChange,\n  handlePhoneChange,\n  handleAddContact,\n}) {\n  return (\n    <div className=\"input__area\">\n      <p>Name</p>\n      <input\n        onChange={handleNameChange}\n        type=\"text\"\n        name=\"name\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n        required\n      />\n      <p>Phone</p>\n      <input type=\"tel\" onChange={handlePhoneChange} />\n\n      <button type=\"button\" className=\"input__btn\" onClick={handleAddContact}>\n        Add contact\n      </button>\n    </div>\n  );\n}\n\nexport default ContactForm;\n","import React from \"react\";\n\nfunction Filter({ filterContacts }) {\n  return (\n    <div>\n      <p>Find contacts by name</p>\n      <input type=\"text\" onChange={filterContacts} />\n    </div>\n  );\n}\n\nexport default Filter;\n","import React, { Component } from \"react\";\nimport styles from \"./ContactList.css\";\n\nclass ContactList extends Component {\n  render() {\n    const { contacts, state, deleteContact } = this.props;\n\n    return (\n      <div className=\"contacts\">\n        <ul className=\"contacts__list\">\n          {state.filter.length === 0\n            ? contacts.map((item) => {\n                return (\n                  <li key={item.key}>\n                    {`${item.name}: ${item.number}`}{\" \"}\n                    <button\n                      onClick={deleteContact}\n                      id={item.key}\n                      type=\"button\"\n                      className=\"contacts__list_btn\"\n                    >\n                      Delete\n                    </button>{\" \"}\n                  </li>\n                );\n              })\n            : contacts\n                .filter((item) =>\n                  item.name.toLowerCase().includes(state.filter.toLowerCase())\n                )\n                .map((item) => {\n                  return (\n                    <li key={item.key}>\n                      {`${item.name}: ${item.number}`}{\" \"}\n                      <button\n                        onClick={deleteContact}\n                        type=\"button\"\n                        className=\"contacts__list_btn\"\n                      >\n                        Delete\n                      </button>{\" \"}\n                    </li>\n                  );\n                })}\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default ContactList;\n","import React, { Component } from \"react\";\nimport shortid from \"shortid\";\nimport ContactForm from \"./components/ContactForm/ContactForm \";\nimport Filter from \"./components/Filter/Filter\";\nimport ContactList from \"./components/ContactList/ContactList\";\n\nclass App extends Component {\n  state = {\n    contacts: [],\n    filter: \"\",\n    name: \"\",\n    number: \"\",\n  };\n\n  componentDidMount() {\n    if (localStorage.getItem(\"contacts\") !== null) {\n      this.setState({ contacts: JSON.parse(localStorage.getItem(\"contacts\")) });\n    }\n  }\n\n  handleNameChange = (evt) => {\n    return this.setState({ name: evt.target.value });\n  };\n\n  handlePhoneChange = (evt) => {\n    return this.setState({ number: evt.target.value });\n  };\n\n  handleAddContact = (evt) => {\n    if (\n      this.state.contacts.find((contact) => {\n        return contact.name === this.state.name;\n      })\n    ) {\n      alert(`${this.state.name} is already in contacts`);\n    } else {\n      const contactsArr = this.state.contacts;\n      const newContact = {\n        key: shortid.generate(),\n        name: this.state.name,\n        number: this.state.number,\n      };\n\n      this.setState({ contacts: [...contactsArr, newContact] });\n\n      // LocalStorage-------\n\n      if (localStorage.getItem(\"contacts\") === null) {\n        localStorage.setItem(\n          \"contacts\",\n          JSON.stringify([...contactsArr, newContact])\n        );\n      } else {\n        const temperaryArr = JSON.parse(localStorage.getItem(\"contacts\"));\n        temperaryArr.push(newContact);\n        localStorage.setItem(\"contacts\", JSON.stringify(temperaryArr));\n      }\n      // --------------------\n    }\n  };\n\n  filterContacts = (evt) => {\n    return this.setState({ filter: evt.target.value });\n  };\n\n  deleteContact = (evt) => {\n    const contactsArr = this.state.contacts;\n    const id = evt.target.id;\n    const elementForRemove = this.state.contacts.find(\n      (item) => item.key === id\n    );\n    const index = contactsArr.indexOf(elementForRemove);\n    contactsArr.splice(index, 1);\n\n    // LocalStorage-------\n    localStorage.removeItem(\"contacts\");\n    localStorage.setItem(\"contacts\", JSON.stringify(contactsArr));\n    // --------------------\n\n    this.setState({ contacts: [...contactsArr] });\n  };\n\n  render() {\n    return (\n      <div className=\"container\">\n        <h1>Phonebook</h1>\n        <ContactForm\n          handleNameChange={this.handleNameChange}\n          handlePhoneChange={this.handlePhoneChange}\n          handleAddContact={this.handleAddContact}\n        />\n\n        <h2>Contacts</h2>\n        <Filter filterContacts={this.filterContacts} />\n\n        <ContactList\n          contacts={this.state.contacts}\n          key={this.state.contacts.key}\n          state={this.state}\n          deleteContact={this.deleteContact}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}